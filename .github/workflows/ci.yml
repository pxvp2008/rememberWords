name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  🧪 test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔍 Type check
      run: npm run type-check

    - name: 🧪 Run tests
      run: npm run test

    - name: 📊 Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  🔨 build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔨 Build project
      run: npm run build

    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  🧹 lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔍 ESLint check
      run: npm run lint

    - name: 🎨 Prettier check
      run: npm run format:check

  🚀 deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔨 Build project
      run: npm run build

    - name: ⚙️ Setup Pages
      uses: actions/configure-pages@v3

    - name: 📄 Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './dist'

    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  🏷️ Release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔨 Build project
      run: npm run build

    - name: 📋 Generate changelog
      id: changelog
      run: |
        # 从 git 历史生成变更日志
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0)..HEAD >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 🏷️ Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.0
        name: Release v1.0.0
        body: |
          ## 🎉 新版本发布 v1.0.0

          ### 📋 变更内容
          ${{ steps.changelog.outputs.CHANGELOG }}

          ### 🚀 快速开始
          ```bash
          npm install rememberwords
          ```

          ### 📖 文档
          - [用户手册](https://github.com/your-username/rememberWords/blob/main/docs/USER_GUIDE.md)
          - [开发者文档](https://github.com/your-username/rememberWords/blob/main/docs/DEVELOPER.md)
        files: |
          dist/**
          LICENSE
          README.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}